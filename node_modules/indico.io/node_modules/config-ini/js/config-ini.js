// Generated by CoffeeScript 1.6.3
(function() {
  var file_load, removable_loader;

  file_load = require('./lib/file_load');

  removable_loader = module.exports.load = function(files, callback) {
    var arg, config_files, file, next, _i, _j, _len, _len1, _ref;
    if (files == null) {
      files = [];
    }
    if ((callback == null) && typeof files === 'function') {
      callback = files;
      files = [];
    }
    config_files = [];
    for (_i = 0, _len = files.length; _i < _len; _i++) {
      file = files[_i];
      config_files.push(file);
    }
    _ref = process.argv;
    for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
      arg = _ref[_j];
      if (arg.substr(0, 9) === '--config=' && arg.length > 9) {
        config_files.push(arg.substr(9));
      }
    }
    if (typeof config_files === 'string') {
      config_files = [config_files];
    }
    if (!config_files.length) {
      config_files.push('config.ini');
    }
    next = function(err) {
      if (err) {
        if (typeof callback === 'function') {
          return callback(err);
        }
        return;
      }
      if (config_files.length) {
        return file_load(module.exports, config_files.shift(), next);
      }
      if (module.exports.load === removable_loader) {
        delete module.exports.load;
      }
      if (typeof callback === 'function') {
        return callback();
      }
    };
    return next();
  };

}).call(this);
